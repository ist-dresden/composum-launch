<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <artifactId>composum-launcher-compatibility</artifactId>
        <groupId>com.composum.platform</groupId>
        <version>1.2.1-SNAPSHOT</version>
    </parent>

    <artifactId>composum-launcher-compatibility-docker-nodes</artifactId>
    <packaging>docker</packaging>

    <name>Composum Launcher Compatibility Docker Starter with Composum Nodes</name>
    <description>Creates a docker image from sling launcher compatibility version, with Composum Nodes (incl. Package
        manager and User mgmt)
    </description>

    <properties>
        <thisdockerimage>composum/nodes-compat</thisdockerimage>
    </properties>

    <dependencies>
        <!-- The base docker image we rely on -->
        <dependency>
            <groupId>com.composum.platform</groupId>
            <artifactId>composum-launcher-compatibility-docker-slingstarter</artifactId>
            <version>${project.version}</version>
            <type>docker</type>
            <optional>true</optional>
        </dependency>

        <!-- For integration tests -->
        <dependency>
            <groupId>com.composum.platform.features</groupId>
            <artifactId>composum-launcher-feature-integrationtest</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources-filtered</directory>
                <filtering>true</filtering>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fetch-included-libraries</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <!-- composum nodes bundles. As bundle, not as package, since we need to safely replace.
                                    order > 20 since we want to replace the old composum bundles in launchpad. -->
                                <artifactItem>
                                    <groupId>com.composum.nodes.osgi</groupId>
                                    <artifactId>composum-nodes-osgi-package-installer</artifactId>
                                    <version>${composum.nodes.version}</version>
                                    <outputDirectory>${project.build.directory}/lib/26</outputDirectory>
                                </artifactItem>

                                <artifactItem>
                                    <groupId>com.composum.nodes</groupId>
                                    <artifactId>composum-nodes-config</artifactId>
                                    <version>${composum.nodes.version}</version>
                                    <outputDirectory>${project.build.directory}/lib/25</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.composum.nodes</groupId>
                                    <artifactId>composum-nodes-jslibs</artifactId>
                                    <version>${composum.nodes.version}</version>
                                    <outputDirectory>${project.build.directory}/lib/25</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.composum.nodes</groupId>
                                    <artifactId>composum-nodes-commons</artifactId>
                                    <version>${composum.nodes.version}</version>
                                    <outputDirectory>${project.build.directory}/lib/25</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.composum.nodes</groupId>
                                    <artifactId>composum-nodes-console</artifactId>
                                    <version>${composum.nodes.version}</version>
                                    <outputDirectory>${project.build.directory}/lib/25</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.composum.nodes</groupId>
                                    <artifactId>composum-nodes-pckgmgr</artifactId>
                                    <version>${composum.nodes.version}</version>
                                    <outputDirectory>${project.build.directory}/lib/25</outputDirectory>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.composum.nodes</groupId>
                                    <artifactId>composum-nodes-usermgr</artifactId>
                                    <version>${composum.nodes.version}</version>
                                    <outputDirectory>${project.build.directory}/lib/25</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>${thisdockerimage}:${project.version}</name>
                            <build>
                                <dockerFile>Dockerfile</dockerFile>
                                <contextDir>${project.basedir}</contextDir>
                                <args>
                                    <PROJECT_VERSION>${project.version}</PROJECT_VERSION>
                                </args>
                                <createImageOptions>
                                    <platform>${docker.platform}</platform>
                                </createImageOptions>
                            </build>
                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                    <port>18080:18080</port>
                                    <port>28080:28080</port>
                                </ports>
                                <volumes>
                                    <bind>
                                        <volume>${project.build.directory}/run/logs:/opt/sling/sling/logs</volume>
                                    </bind>
                                </volumes>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>

            <!-- run the ITs -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${docker.skip}</skip>
                    <dependenciesToScan>
                        com.composum.platform.features:composum-launcher-feature-integrationtest
                    </dependenciesToScan>
                    <systemPropertyVariables>
                        <starter.http.test.ports>false:8080</starter.http.test.ports>
                        <starter.min.bundles.count>155</starter.min.bundles.count>
                        <starter.starterready.path>/index.html</starter.starterready.path>
                        <!-- Comma-separated list of paths to check for 200 status -->
                        <starter.check.paths>
                            /server/default/jcr:root/content CONTAINS sv:node,
                            /index.html,
                            /system/console/bundles,
                            /bin/browser.html,
                            /bin/packages.html,
                            /system/console/status-Bundlelist.txt CONTAINS com.composum.nodes.console.*active,
                        </starter.check.paths>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- TODO remove this workaround for missing installation of artifacts https://github.com/fabric8io/docker-maven-plugin/issues/1537 -->
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Generate .env file with our version to enable version independent compose files -->
                        <id>copy-resources</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/env</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
