# This builds develop and deploys a snapshot to our repository.
# Will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
name: Develop - Build and Deploy Snapshot
run-name: Develop - Build and Deploy Snapshot on ${{ github.ref_name }}

on:
  push:
    branches: [ develop ]
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      MVNCMD: mvn -B -ntp -s ${{ github.workspace }}/.github/settings-istrepo.xml  -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        maven-version: 3.8.7

    - name: Dump event context for debugging
      continue-on-error: true  # Debugging output only, and this annoyingly fails when the commit messge has a (
      run: |
        echo '${{ github.event_name }} for ${{ github.ref_type }} ${{ github.ref_name }} or ${{ github.event.ref }}'
        # https://docs.github.com/en/developers/webhooks-and-events/webhooks/webhook-events-and-payloads#push
        echo 'github.event:'
        echo '${{ toJSON(github.event) }}'

    - name: Dump github context
      continue-on-error: true  # Debugging output only, and this annoyingly fails when the commit message has a (
      run: |
          echo '${{ toJSON(github) }}'

    - name: Set a master password
      run: |
        MASTERPWD=$(openssl rand -base64 25)
        echo "<settingsSecurity> <master>$(mvn --encrypt-master-password "$MASTERPWD")</master></settingsSecurity>" > $HOME/.m2/settings-security.xml
        # echo "MASTERPWD=\"$MASTERPWD\"" >> $GITHUB_ENV
        # The master password isn't actually used, but the maven complains otherwise.

    - name: Git & Maven Status
      run: |
        git status --untracked-files --ignored
        git log -3 --no-color
        $MVNCMD -version
        git branch --show-current

    - name: Mvn Effective POM
      run: $MVNCMD -P $(git branch --show-current) -N help:effective-pom

    - name: Mvn Effective Settings
      run: $MVNCMD -P $(git branch --show-current) -N help:effective-settings

    # ==== workaround for missing key

    - name: Import GPG key
      env:
         GPG_SECRET_KEYS: ${{ secrets.GPG_SECRET_KEYS }}
         GPG_OWNERTRUST: ${{ secrets.GPG_OWNERTRUST }}
      run: |
         echo $GPG_SECRET_KEYS | base64 --decode | gpg --import --no-tty --batch --yes
         echo $GPG_OWNERTRUST | base64 --decode | gpg --import-ownertrust --no-tty --batch --yes
         gpg -v --refresh-keys
         gpg --list-secret-keys --keyid-format LONG

     # ==== end; TODO: remove workaround later

    - name: Build with Maven
      # When parent-2:1.7 is active, -P ensureSnapshots will do a sanity check of the version number
      # We try several times since unfortunately there are sporadic startup problems in the integration tests :-(
      run: |
        # FIXME TAKE FROM ENV ONCE IT'S THERE
        export DOCKERHUB_USER=composum
        export DOCKERHUB_PASSWD=$(echo "LS0tLS1CRUdJTiBQR1AgTUVTU0FHRS0tLS0tCgpoUUlNQTJ6dkpmcmVaZHhuQVJBQXJEYUZZQlVMdXhRZ3g2and3NUpkRmVlS1NjNmxZUXp3SFExZTR3alIxQUlWCml0V09YZHNHQVZYTzVTQ2wraGpkZUdzcCtiK0ZTdi9qbW9XUmZSUWhMWTRueGlpV1ZuQVdCZ3R3aUc2QkpTVU8KS09Ib3kxVnR6R2d2R2lZVDRwMTR5TDFXam5mZms0MCtwOG5lSFRCMy9VL2JhN1N1WnlzeWorVFV1bFdVWmtqdQp2ZGcrTXBzUjFaMmRDdDVtSDFZTEhHWXRxbktVUXdnUUY0K3JmZEZIMFU2SG9ZRERJbnN3TkZIaGhWRVNFSjZ1CmhxZFVZL1ZMYVB0ZnVWYktqVkE3bHg4c2Y3SVdQM2JUKzV5OU5aR0tqMy9tT1I1bmxNUkNKcExlWGxtMEVNTjQKL01tVUEyZk04NlBYb0JjUWJSY00reE1XMy9YVi96QmkxSC9wMjArY21lSmM0N0lmVmpSRVMrV211VFZqOVZqNAp4YURZMkdlZ3pndk1rU3RzajA2Nk83WEdmV1hDRmthVU9CZDRQbEFwTS84bjk4c2N6VUF1aFFhbGxXN1pvb0hSCmYyMmJMK0N5bkVYQ0JUN3dPN1VEMjNKWjFoUkFXYjFiTzFndkN2Nm91aVJ3VXAxeXNJTjFyRytrVjJMZ2lvRXcKUEtpMnFJZlM2K3IzL3BRazdPS2NuRzhidHdzNlNwNUsxNHJFZWtMeWNnbE5tS291clRYQk1mQnhVeE1ndnFobwpNbDlRSi80cE9vSFA0bTgxWUNtU2VIS3VsdUJYWE5FNnR4N0Jta2xMWHZoamRHVllDMmVhTWVvMGlLRGtaR3ZMCkJQMUNpSVVHcG5DME53cnhUZFRreDBIYmx4SXEzMEZaRm4xQlA4dDA3UUJsMm1USWpFNEFqbUVlcWZXWnZRYlMKVEFGL2JORlo0bDJrUW5mSVlXOUhIUDk3YlZFRkFXdHE3RUE1cm51SnBKOWhzMVRqbm02aGRxQkVaU0dGekFFWQpIejJzU2xKOHAxRWJ5dEdRNmxmOGVzVFN2UStMUkhnZ29LSUxYa0k9Cj1YOGI4Ci0tLS0tRU5EIFBHUCBNRVNTQUdFLS0tLS0K" | base64 --decode | gpg -d )
        # FIXME END
        PROFILES="ensureSnapshots,$(git branch --show-current)"
        echo "profiles: $PROFILES"
        ( $MVNCMD -P $PROFILES install && echo 1st run success ) || \
        ( $MVNCMD -P $PROFILES install && echo 2nd run install ) || \
        ( $MVNCMD -P $PROFILES install && echo 3rd run install )

    - name: Sanitycheck version before deploying
      run: |
        echo "Version: "
        $MVNCMD help:evaluate -Dexpression=project.version -q -DforceStdout
        $MVNCMD help:evaluate -Dexpression=project.version -q -DforceStdout | egrep -- '-SNAPSHOT$' > /dev/null || exit 1
        # unfortunately, this would require a snapshot parent if just called from the command line, so we cannot use it: :-(
        # mvn org.apache.maven.plugins:maven-enforcer-plugin:3.0.0:enforce -Drules=requireSnapshotVersion

    - name: Deploy with Maven
      # We don't do docker pushes as we don't currently (as of 4/22) have an automatic solution for multi architecture builds
      # Compare also https://github.com/actions/virtual-environments/issues/2187 (M1 support for github actions)
      run: |
        # FIXME TAKE FROM ENV ONCE IT'S THERE
        export DOCKERHUB_USER=composum
        export DOCKERHUB_PASSWD=$(echo "LS0tLS1CRUdJTiBQR1AgTUVTU0FHRS0tLS0tCgpoUUlNQTJ6dkpmcmVaZHhuQVJBQXJEYUZZQlVMdXhRZ3g2and3NUpkRmVlS1NjNmxZUXp3SFExZTR3alIxQUlWCml0V09YZHNHQVZYTzVTQ2wraGpkZUdzcCtiK0ZTdi9qbW9XUmZSUWhMWTRueGlpV1ZuQVdCZ3R3aUc2QkpTVU8KS09Ib3kxVnR6R2d2R2lZVDRwMTR5TDFXam5mZms0MCtwOG5lSFRCMy9VL2JhN1N1WnlzeWorVFV1bFdVWmtqdQp2ZGcrTXBzUjFaMmRDdDVtSDFZTEhHWXRxbktVUXdnUUY0K3JmZEZIMFU2SG9ZRERJbnN3TkZIaGhWRVNFSjZ1CmhxZFVZL1ZMYVB0ZnVWYktqVkE3bHg4c2Y3SVdQM2JUKzV5OU5aR0tqMy9tT1I1bmxNUkNKcExlWGxtMEVNTjQKL01tVUEyZk04NlBYb0JjUWJSY00reE1XMy9YVi96QmkxSC9wMjArY21lSmM0N0lmVmpSRVMrV211VFZqOVZqNAp4YURZMkdlZ3pndk1rU3RzajA2Nk83WEdmV1hDRmthVU9CZDRQbEFwTS84bjk4c2N6VUF1aFFhbGxXN1pvb0hSCmYyMmJMK0N5bkVYQ0JUN3dPN1VEMjNKWjFoUkFXYjFiTzFndkN2Nm91aVJ3VXAxeXNJTjFyRytrVjJMZ2lvRXcKUEtpMnFJZlM2K3IzL3BRazdPS2NuRzhidHdzNlNwNUsxNHJFZWtMeWNnbE5tS291clRYQk1mQnhVeE1ndnFobwpNbDlRSi80cE9vSFA0bTgxWUNtU2VIS3VsdUJYWE5FNnR4N0Jta2xMWHZoamRHVllDMmVhTWVvMGlLRGtaR3ZMCkJQMUNpSVVHcG5DME53cnhUZFRreDBIYmx4SXEzMEZaRm4xQlA4dDA3UUJsMm1USWpFNEFqbUVlcWZXWnZRYlMKVEFGL2JORlo0bDJrUW5mSVlXOUhIUDk3YlZFRkFXdHE3RUE1cm51SnBKOWhzMVRqbm02aGRxQkVaU0dGekFFWQpIejJzU2xKOHAxRWJ5dEdRNmxmOGVzVFN2UStMUkhnZ29LSUxYa0k9Cj1YOGI4Ci0tLS0tRU5EIFBHUCBNRVNTQUdFLS0tLS0K" | base64 --decode | gpg -d )
        # FIXME END
        PROFILES="ensureSnapshots,$(git branch --show-current)"
        $MVNCMD -P $PROFILES,deployDocker clean deploy
      env:
        NEXUS_BUILD_USER: ${{ secrets.NEXUS_BUILD_USER }}
        NEXUS_BUILD_PASSWD: ${{ secrets.NEXUS_BUILD_PASSWD }}
