<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.composum.platform</groupId>
        <artifactId>composum-launcher-docker</artifactId>
        <version>1.2.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>docker</packaging>

    <artifactId>composum-launcher-docker-featurelauncher</artifactId>
    <version>1.2.1-SNAPSHOT</version><!-- sync with Pages. This is used as a tag for the docker image. -->

    <name>Composum Launcher Docker Feature Launcher</name>
    <description>Creates a docker image with a sling feature launcher that launches a FAR from a Sling Starter 12
        snapshot, but is prepared to deploy more / different features as well as packages / bundles from the filesystem.
    </description>

    <properties>
        <thisdockerimage>composum/featurelauncher-nodes</thisdockerimage>
    </properties>

    <dependencies>
        <!-- We use scope runtime for stuff that get's embedded into the docker image since there is no need to make
        that a transitive dependency for docker images deriving from this. -->
        <dependency>
            <groupId>com.composum.platform.features</groupId>
            <artifactId>composum-launcher-feature-nodesstarter</artifactId>
            <version>${project.version}</version>
            <classifier>launcher</classifier>
            <scope>provided</scope>
        </dependency>

        <!-- For integration tests -->
        <dependency>
            <groupId>com.composum.platform.features</groupId>
            <artifactId>composum-launcher-feature-integrationtest</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fetch-included-libraries</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.composum.platform.features</groupId>
                                    <artifactId>composum-launcher-feature-nodesstarter</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>launcher</classifier>
                                    <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                                    <destFileName>nodeslauncher.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.composum.platform.features</groupId>
                                    <artifactId>composum-launcher-feature-nodesstarter</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>oak_tar</classifier>
                                    <type>far</type>
                                    <outputDirectory>${project.build.directory}/dependencies/system</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <verbose>all</verbose>
                    <stopMode>kill</stopMode>
                    <allContainers>true</allContainers>
                    <!-- ensures a container left running after an aborted build is noticed because it's in conflict. -->
                    <containerNamePattern>%n</containerNamePattern>
                    <images>
                        <image>
                            <name>${thisdockerimage}:${project.version}</name>
                            <alias>featurelauncher</alias>
                            <build>
                                <dockerFile>Dockerfile</dockerFile>
                                <contextDir>${project.basedir}</contextDir>
                                <args>
                                    <LAUNCHERJAR>target/dependencies/nodeslauncher.jar</LAUNCHERJAR>
                                    <SYSTEM_FAR_DIRECTORY>target/dependencies/system</SYSTEM_FAR_DIRECTORY>
                                </args>
                            </build>
                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                    <port>18080:18080</port>
                                    <port>28080:28080</port>
                                </ports>
                            </run>
                        </image>
                    </images>
                </configuration>
            </plugin>

            <!-- run the ITs -->
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <skip>${docker.skip}</skip>
                    <dependenciesToScan>
                        com.composum.platform.features:composum-launcher-feature-integrationtest
                    </dependenciesToScan>
                    <systemPropertyVariables>
                        <starter.http.test.ports>false:8080</starter.http.test.ports>
                        <starter.min.bundles.count>227</starter.min.bundles.count>
                        <!-- Comma-separated list of paths to check for 200 status -->
                        <starter.check.paths>
                            /starter.html,
                            /server/default/jcr:root/content CONTAINS sv:node,
                            /system/sling.js,
                            /content/starter/img/sling-logo.svg,
                            /system/console/bundles,
                            /bin/browser.html,
                            /bin/packages.html,
                            /bin/cpm/usermanagement.tree.json/home/users/system/sling,
                            /system/console/status-Bundlelist.txt CONTAINS com.composum.nodes.config.*active,
                        </starter.check.paths>
                    </systemPropertyVariables>
                </configuration>
            </plugin>

            <!-- TODO remove this workaround for missing installation of artifacts https://github.com/fabric8io/docker-maven-plugin/issues/1537 -->
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>develop</id>
            <properties>
                <imagetag>develop</imagetag>
            </properties>
        </profile>

        <profile>
            <id>master</id>
            <properties>
                <imagetag>latest</imagetag>
            </properties>
        </profile>

    </profiles>

</project>
