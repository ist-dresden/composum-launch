<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.composum.platform</groupId>
        <artifactId>composum-launcher-docker</artifactId>
        <version>1.2.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <packaging>docker-build</packaging>

    <artifactId>composum-launcher-docker-featurelauncher</artifactId>
    <version>1.2.1-SNAPSHOT</version><!-- sync with Pages. This is used as a tag for the docker image. -->

    <name>Composum Launcher Docker Feature Launcher</name>
    <description>Creates a docker image with a sling feature launcher that launches a FAR from a Sling Starter 12
        snapshot, but is prepared to deploy more / different features as well as packages / bundles from the filesystem.
    </description>

    <properties>
        <thisdockerimage>composum/featurelauncher-nodes</thisdockerimage>
    </properties>

    <dependencies>
        <!-- We use scope runtime for stuff that get's embedded into the docker image since there is no need to make
        that a transitive dependency for docker images deriving from this. -->
        <dependency>
            <groupId>com.composum.platform.features</groupId>
            <artifactId>composum-launcher-feature-nodesstarter</artifactId>
            <version>${project.version}</version>
            <classifier>launcher</classifier>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>fetch-included-libraries</id>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.composum.platform.features</groupId>
                                    <artifactId>composum-launcher-feature-nodesstarter</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>launcher</classifier>
                                    <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                                    <destFileName>nodeslauncher.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.composum.platform.features</groupId>
                                    <artifactId>composum-launcher-feature-nodesstarter</artifactId>
                                    <version>${project.version}</version>
                                    <classifier>oak_tar</classifier>
                                    <type>far</type>
                                    <outputDirectory>${project.build.directory}/dependencies/system</outputDirectory>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
<!--                    <repository>${thisdockerimage}</repository>-->
<!--                    <tag>${project.version}</tag>-->
<!--                    <buildArgs>-->
<!--                        <LAUNCHERJAR>target/dependencies/nodeslauncher.jar</LAUNCHERJAR>-->
<!--                        <SYSTEM_FAR_DIRECTORY>target/dependencies/system</SYSTEM_FAR_DIRECTORY>-->
<!--                    </buildArgs>-->
<!--                    <verbose>true</verbose>-->
<!--                    <detail>true</detail>-->
<!--                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>-->
                    <verbose>all</verbose>
                    <images>
                        <image>
                            <name>${thisdockerimage}:${project.version}</name>
                            <alias>featurelauncher</alias>
                            <build>
                                <dockerFile>Dockerfile</dockerFile>
                                <contextDir>${project.basedir}</contextDir>
                                <args>
                                    <LAUNCHERJAR>target/dependencies/nodeslauncher.jar</LAUNCHERJAR>
                                    <SYSTEM_FAR_DIRECTORY>target/dependencies/system</SYSTEM_FAR_DIRECTORY>
                                </args>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <profile>
            <id>develop</id>
            <properties>
                <imagetag>develop</imagetag>
            </properties>
        </profile>

        <profile>
            <id>master</id>
            <properties>
                <imagetag>latest</imagetag>
            </properties>
        </profile>

        <profile>
            <!-- This can also be called manually with   mvn clean install dockerfile:tag dockerfile:push -->
            <!-- Use authentication with entry in settings.xml , encrypt pwd with  mvn &dash;&dash;encrypt-password -->
            <!--<server>
                <id>docker.io</id>
                <username>composum</username>
                <password>xxx/password>
            </server>-->
            <id>deployDocker</id>
            <build>
                <plugins>

                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <configuration>
                            <tagName>${project.version}</tagName>
                        </configuration>
                        <executions>
                            <execution>
                                <id>push-image</id>
                                <phase>deploy</phase>
                                <goals>
                                    <goal>tag</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                </plugins>
            </build>
        </profile>

    </profiles>

</project>
